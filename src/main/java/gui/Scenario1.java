/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import files.*;
import basics.*;
import tests.*;
import db.*;
import java.awt.Component;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;

import javax.swing.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author it21735/it21754/it217130
 */
public class Scenario1 extends javax.swing.JFrame {
    //"hits" the api and prints all the objects that the api returns 
    //every object that is being returned is automatically saved innto a file and into the sql database 
    //every time that the api returns objects, these objects are being counted

    APIWrapper api = new APIWrapper();
    public DefaultListModel dataModel;
    public DefaultListModel Arraydata;

    ArrayList<Artist> Artistdatafromurl;
    ArrayList<Release> Releasedatafromurl;

    Component myFrame = null;
    String userinput = null;

    //Artist's fields
    String string;
    String name = null;
    String type = null;
    String gender = null;
    String country = null;

    //Release's field
    String title = null;
    String status = null;  //official or unofficial 
    String releaseDate = null;
    String format = null;
    //+country 

    int number_of_elements = 0;

    public Scenario1() { //constructor
        this.dataModel = new DefaultListModel();
        this.Arraydata = new DefaultListModel();

        initComponents();
        this.setDefaultCloseOperation(Scenario1.DISPOSE_ON_CLOSE);  //DISPOSE  HIDE JFrame  WindowConstants
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        SearchText = new javax.swing.JTextField();
        ArtistNameCheckBox = new javax.swing.JCheckBox();
        GroupNameCheckBox = new javax.swing.JCheckBox();
        CountryCheckBox = new javax.swing.JCheckBox();
        DescriptionLabel = new javax.swing.JLabel();
        WhatYouWannaSearchForLabel = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        ReleaseCheckBox = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ReturnYesOrNoTextArea = new javax.swing.JTextArea();
        ResultsLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        NumberOfObjectsThatTheApiReturns = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        ClearResultsButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ObejctsIntoFileAndDBLabel = new javax.swing.JLabel();
        GoBackToTheMenuButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1619, 700));

        SearchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextActionPerformed(evt);
            }
        });

        ArtistNameCheckBox.setForeground(new java.awt.Color(0, 0, 51));
        ArtistNameCheckBox.setText("Solo Artist Name");
        ArtistNameCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArtistNameCheckBoxActionPerformed(evt);
            }
        });

        GroupNameCheckBox.setForeground(new java.awt.Color(0, 0, 51));
        GroupNameCheckBox.setText("Group name");
        GroupNameCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupNameCheckBoxActionPerformed(evt);
            }
        });

        CountryCheckBox.setForeground(new java.awt.Color(0, 0, 51));
        CountryCheckBox.setText("Country");
        CountryCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountryCheckBoxActionPerformed(evt);
            }
        });

        DescriptionLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        DescriptionLabel.setForeground(new java.awt.Color(0, 0, 153));
        DescriptionLabel.setText("Short Description");

        WhatYouWannaSearchForLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        WhatYouWannaSearchForLabel.setForeground(new java.awt.Color(0, 0, 153));
        WhatYouWannaSearchForLabel.setText("Choose what you wanna search for");

        SubmitButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        SubmitButton.setForeground(new java.awt.Color(0, 0, 153));
        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ReleaseCheckBox.setForeground(new java.awt.Color(0, 0, 51));
        ReleaseCheckBox.setText("Release");
        ReleaseCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReleaseCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(WhatYouWannaSearchForLabel)
                    .addComponent(DescriptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(SearchText, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75)
                        .addComponent(SubmitButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ArtistNameCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(GroupNameCheckBox)
                        .addGap(37, 37, 37)
                        .addComponent(CountryCheckBox)
                        .addGap(32, 32, 32)
                        .addComponent(ReleaseCheckBox)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(DescriptionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(SearchText, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                        .addComponent(SubmitButton)))
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(WhatYouWannaSearchForLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ArtistNameCheckBox)
                        .addComponent(GroupNameCheckBox)
                        .addComponent(CountryCheckBox)
                        .addComponent(ReleaseCheckBox)))
                .addGap(68, 68, 68))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Did the url return information in json format?");

        ReturnYesOrNoTextArea.setColumns(20);
        ReturnYesOrNoTextArea.setRows(5);
        jScrollPane1.setViewportView(ReturnYesOrNoTextArea);

        ResultsLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ResultsLabel.setForeground(new java.awt.Color(0, 0, 102));
        ResultsLabel.setText("Here there are the results:");

        NumberOfObjectsThatTheApiReturns.setColumns(20);
        NumberOfObjectsThatTheApiReturns.setRows(5);
        jScrollPane3.setViewportView(NumberOfObjectsThatTheApiReturns);

        jList1.setModel(Arraydata);
        jScrollPane4.setViewportView(jList1);

        ClearResultsButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ClearResultsButton.setForeground(new java.awt.Color(0, 0, 153));
        ClearResultsButton.setText("Clear Options and Results");
        ClearResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearResultsButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("How many objects did the API return ?");

        ObejctsIntoFileAndDBLabel.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        ObejctsIntoFileAndDBLabel.setForeground(new java.awt.Color(0, 0, 51));
        ObejctsIntoFileAndDBLabel.setText("These objects were also saved into a file and into the database ");

        GoBackToTheMenuButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        GoBackToTheMenuButton.setForeground(new java.awt.Color(0, 0, 153));
        GoBackToTheMenuButton.setText("Go Back to the Menu!");
        GoBackToTheMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoBackToTheMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResultsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(ObejctsIntoFileAndDBLabel))
                .addGap(100, 100, 100)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 434, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(221, 221, 221)
                        .addComponent(ClearResultsButton)
                        .addGap(46, 46, 46)
                        .addComponent(GoBackToTheMenuButton)
                        .addContainerGap(260, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(25, 25, 25))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(ResultsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(ObejctsIntoFileAndDBLabel))))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ClearResultsButton)
                                .addComponent(GoBackToTheMenuButton)))
                        .addContainerGap(121, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        //The actionPerformed() method is invoked automatically whenever you click on the registered component.
        userinput = null;
        userinput = SearchText.getText();  //in the variable userinput is being saved what the user has typed every time  
        this.dataModel.addElement(userinput);
    }//GEN-LAST:event_SubmitButtonActionPerformed

    @Override
    public String toString() {
        return string + ":";
    }

    private void ArtistNameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArtistNameCheckBoxActionPerformed
        searchForArtistUsingUrl(api.searchForArtistName(userinput));
    }//GEN-LAST:event_ArtistNameCheckBoxActionPerformed

    private void CountryCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountryCheckBoxActionPerformed
        searchForArtistUsingUrl(api.searchForCountry(userinput));
    }//GEN-LAST:event_CountryCheckBoxActionPerformed

    private void GroupNameCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupNameCheckBoxActionPerformed
        searchForArtistUsingUrl(api.searchForNameGroup(userinput));
    }//GEN-LAST:event_GroupNameCheckBoxActionPerformed

    private void ReleaseCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReleaseCheckBoxActionPerformed
        Releasedatafromurl = api.search_for_Release(userinput);

        //showing pop frame to the user
        JOptionPane.showMessageDialog(myFrame, "Your search has been submitted!\n\nWe are waiting for the API result!");

        if (Releasedatafromurl.isEmpty()) {   //if the arraylist is empty, it means that the api did not return any objects aka results 
            ReturnYesOrNoTextArea.setText("Sorry!\nNo matches were found!");
            ReturnYesOrNoTextArea.setVisible(true);
        } else { //if the the arraylist is not empty, which means that objects were saved into the arraylist
            ReturnYesOrNoTextArea.setText("YES!\nResults were found!");
            ReturnYesOrNoTextArea.setVisible(true);

            Arraydata.clear();
            saveRelease(api.search_for_Release(userinput));
            jList1.setModel(Arraydata);
            jList1.setVisible(true);

            number_of_elements = 0;
            number_of_elements = Arraydata.size();
            NumberOfObjectsThatTheApiReturns.setText(Integer.toString(number_of_elements)); //show the number of the objects 
        }
    }//GEN-LAST:event_ReleaseCheckBoxActionPerformed

    private void ClearResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearResultsButtonActionPerformed
        SearchText.setText("");
        //Deselecting the checkbox, that has been selected 
        ArtistNameCheckBox.setSelected(false);
        CountryCheckBox.setSelected(false);
        GroupNameCheckBox.setSelected(false);
        ReleaseCheckBox.setSelected(false);
        ReturnYesOrNoTextArea.setText(""); //clearing the text area
        NumberOfObjectsThatTheApiReturns.setText("");

        try {
            Artistdatafromurl.clear();
        } catch (Exception ex) {
            System.out.println(ex);
            System.out.println("null pointer exception");
        }
        try {
            Releasedatafromurl.clear();
        } catch (Exception ex) {
            System.out.println(ex);
            System.out.println("null pointer exception");
        }

        Arraydata = (DefaultListModel) jList1.getModel();
        Arraydata.removeAllElements();
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(APIWrapper.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ClearResultsButtonActionPerformed

    private void GoBackToTheMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoBackToTheMenuButtonActionPerformed
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        dispose();
    }//GEN-LAST:event_GoBackToTheMenuButtonActionPerformed

    private void SearchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTextActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scenario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scenario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scenario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scenario1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scenario1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ArtistNameCheckBox;
    private javax.swing.JButton ClearResultsButton;
    private javax.swing.JCheckBox CountryCheckBox;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JButton GoBackToTheMenuButton;
    private javax.swing.JCheckBox GroupNameCheckBox;
    private javax.swing.JTextArea NumberOfObjectsThatTheApiReturns;
    private javax.swing.JLabel ObejctsIntoFileAndDBLabel;
    private javax.swing.JCheckBox ReleaseCheckBox;
    private javax.swing.JLabel ResultsLabel;
    private javax.swing.JTextArea ReturnYesOrNoTextArea;
    private javax.swing.JTextField SearchText;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JLabel WhatYouWannaSearchForLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables

    public void searchForArtistUsingUrl(ArrayList<Artist> datafromurl) {
        Artistdatafromurl = datafromurl;   //the arraylist (with objects) that the api returns is being put into an arraylist
        //showing pop frame to the user
        JOptionPane.showMessageDialog(myFrame, "Your search has been submitted!\n\nWe are waiting for the API result!");

        if (Artistdatafromurl.isEmpty()) {   //if the arraylist is empty, it means that the api did not return any objects aka results 
            ReturnYesOrNoTextArea.setText("Sorry!\nNo matches were found!");
            ReturnYesOrNoTextArea.setVisible(true);
        } else { //if the the arraylist is not empty, which means that objects were saved into the arraylist
            ReturnYesOrNoTextArea.setText("YES!\nResults were found!");
            ReturnYesOrNoTextArea.setVisible(true);

            Arraydata.clear();
            saveArtist(Artistdatafromurl);   //Artistdatafromurl = api. ....;
            jList1.setModel(Arraydata);
            jList1.setVisible(true);

            NumberOfObjectsThatTheApiReturns.setText(Integer.toString(Arraydata.size())); //show the number of the objects
        }
    }

    protected int saveArtist(ArrayList<Artist> datafromurl) { //putting all the artist  objects that the api returned into deafultlistmodel
        for (int i = 0; i < datafromurl.size(); i++) {
            name = (String) datafromurl.get(i).getName();
            type = (String) datafromurl.get(i).getType();
            gender = (String) datafromurl.get(i).getGender();
            country = (String) datafromurl.get(i).getCountry();

            Arraydata.addElement(name);
            Arraydata.addElement(type);
            Arraydata.addElement(gender);
            Arraydata.addElement(country);
            Arraydata.addElement("\n");
        }
        return Arraydata.size();
    }

    protected void saveRelease(ArrayList<Release> datafromurl) {  //putting all the release objects that the api returned into deafultlistmodel
        for (int i = 0; i < datafromurl.size(); i++) {
            title = (String) datafromurl.get(i).getTitle();
            status = (String) datafromurl.get(i).getStatus();
            releaseDate = (String) datafromurl.get(i).getReleaseDate();
            format = (String) datafromurl.get(i).getFormat();
            country = (String) datafromurl.get(i).getCountry();

            Arraydata.addElement(title);
            Arraydata.addElement(status);
            Arraydata.addElement(releaseDate);
            Arraydata.addElement(format);
            Arraydata.addElement(country);
            Arraydata.addElement("\n");
        }
    }

}
